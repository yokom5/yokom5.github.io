{"version":3,"sources":["work-history/OutlinedCard.js","Profile.js","Menu.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","title","fontSize","pos","marginBottom","OutlinedCard","props","classes","Card","variant","CardContent","Typography","className","color","gutterBottom","date","component","position","company","url","skil","Profile","Container","maxWidth","List","aria-label","ListItem","alignItems","ListItemText","primary","Fragment","Component","root","width","Menu","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","href","App","Box","Grid","container","spacing","item","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.11262592.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    }\n});\n\nexport default function OutlinedCard(props) {\n    const classes = useStyles();\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {props.date}\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {props.position}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    {props.company}\n                    {props.url}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    {props.skil}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n","import React, {Component} from 'react';\nimport './Profile.css';\nimport {Container, List, ListItem, ListItemText} from \"@material-ui/core\";\nimport OutlinedCard from \"./work-history/OutlinedCard\";\n\nexport default class Profile extends Component {\n    render() {\n        return (\n            <Container maxWidth={\"sm\"}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    <ListItem alignItems={\"flex-start\"}>\n                        <ListItemText\n                            primary={\"Summary\"}\n                        >\n                            <React.Fragment>\n                                {\"hoge\"}\n                            </React.Fragment>\n                        </ListItemText>\n                    </ListItem>\n                    <ListItem alignItems={\"flex-start\"}>\n                        <ListItemText\n                            primary={\"Skill\"}\n                        >\n                            <React.Fragment>\n                                {\"hoge\"}\n                            </React.Fragment>\n                        </ListItemText>\n                    </ListItem>\n                    <ListItem alignItems={\"flex-start\"}>\n                        <OutlinedCard\n                            date={\"2017.04-\"}\n                            position={\"System Engineer\"}\n                            company={\"株式会社アイ・ティー・ワン\"}\n                            url={\"https://www.it-one.co.jp/\"}\n                            skil={\"Create Web Service, Java, Linux, AWS, Subversion\"}\n                        />\n                    </ListItem>\n                    <ListItem alignItems={\"flex-start\"}>\n                    <OutlinedCard\n                            date={\"2020.01-\"}\n                            position={\"Web Engineer\"}\n                            company={\"株式会社アップステアーズ\"}\n                            url={\"https://www.upstairs.co.jp/\"}\n                            skil={\"Create Web Application, PHP(Laravel), JavaScript(Vue), AWS, Git\"}\n                        />\n                    </ListItem>\n                    <ListItem alignItems={\"flex-start\"}>\n                        <ListItemText\n                            primary={\"Activity\"}\n                        >\n                            <React.Fragment>\n                                {\"hoge\"}\n                            </React.Fragment>\n                        </ListItemText>\n                    </ListItem>\n                </List>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport HotTubIcon from '@material-ui/icons/HotTub';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 500,\n    },\n});\n\nexport default function Menu() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    return (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n        >\n            <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\n            <BottomNavigationAction label=\"Github\" icon={<GitHubIcon />} href={\"https://github.com/yokom5\"}/>\n            <BottomNavigationAction label=\"Lancers\" icon={<FastfoodIcon />} href={\"https://www.lancers.jp/profile/nishi_001?ref=side_menu\"}/>\n            <BottomNavigationAction label=\"CrowdWorks\" icon={<HotTubIcon />} href={\"https://crowdworks.jp/public/employees/1496186?ref=mypage_nav1_account\"}/>\n        </BottomNavigation>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport Profile from \"./Profile\";\nimport {Box, Grid} from \"@material-ui/core\";\nimport Menu from \"./Menu\";\n\nfunction App() {\n    return (\n        <Box className=\"App\">\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Menu/>\n                </Grid>\n                <Grid item xs={12}>\n                    <Profile/>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}